---
# tasks file for AAA
- name: Configure the standard AAA settings
  tags:
    - aaa
  block:
    # First, build commands to remove any previously configured AAA servers
    - name: Capture show run command output for AAA cleanup
      tags: aaa_dry_run
      ansible.netcommon.cli_command:
        command: "copy running-configuration display"
      register: config_result
      failed_when: config_result.stdout|length == 0
      when: "config_output is not defined or config_output|length == 0"

    - name: Save the configuration output to a variable
      tags: aaa_dry_run
      ansible.builtin.set_fact:
        config_output: "{{ config_result.stdout }}"
      when: config_result.stdout is defined and config_result.stdout | length > 0
    
    - name: Fail if the config has RADIUS set up and no clear_radius tag
      tags: aaa_dry_run
      ansible.builtin.fail:
        msg: "{{ inventory_hostname }}/{{ ansible_host }} contains a pre-existing radius configuration. Remove manually before proceeding"
      # the regex_findall result will be > 0 if it finds "set aaa-server SOME_ID ip-addr SOME_IP" in the config
      when: "config_output | regex_findall('(?m)set aaa-server \\d ip-addr [\\d\\.]+')|length > 0 and 'clear_radius' not in ansible_run_tags"

    - name: Build list of RADIUS servers from the config to clear
      tags: aaa_dry_run
      ansible.builtin.set_fact:
        # the regex_findall will return a list of matching lines and the group causes it to return just IP
        aaa_clear_servers: "{{ config_output | regex_findall('(?m)set aaa-server \\d ip-addr ([\\d\\.]+)') | unique }}"
      when: "config_output | regex_findall('(?m)set aaa-server \\d ip-addr [\\d\\.]+')|length > 0 and 'clear_radius' in ansible_run_tags"

    - name: Build aaa.conf file from the template
      tags: aaa_dry_run
      ansible.builtin.template:
        src: aaa.j2
        dest: "{{ config_build }}/03_aaa.conf"
        mode: 0640
