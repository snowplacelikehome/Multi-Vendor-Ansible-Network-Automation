---
# tasks file for syslog

- name: Configure the standard Syslog settings
  tags:
    - syslog
  block:
    # 
    # No cleanup necessary. Overwrite existing syslog hosts if any are previously configured assuming more than one is fine
    - name: Build syslog.conf file from the template
      tags: syslog_dry_run
      ansible.builtin.template:
        src: syslog.j2
        dest: "{{ config_build }}/02_syslog.conf"
        mode: 0640

    ## This method of connecting to devices and pushing configs within each role is no
    ## longer used (replaced by config aggrigation method)
    ##
    # 
    ## # First, build commands to remove any previously configured Syslog servers
    ## - name: Capture show run command output for cleanup
    ##   tags: syslog_dry_run
    ##   ansible.netcommon.cli_command:
    ##     command: "show running-config"
    ##   register: config_output
    ##   failed_when: config_output.stdout|length == 0

    ## - name: Build set of cleanup commands
    ##   tags: syslog_dry_run
    ##   ansible.builtin.set_fact:
    ##     # the regex_findall will collect just the portion of the lines from the device's config to use in the remove command
    ##     # the regex_replace will match the reusable portion of the regex_findall and use the substitution to build the removal command
    ##     syslog_clear_commands: "{{ config_output.stdout | regex_findall('(?m)^logging host [\\w\\.-]+') | regex_replace('(?m)(logging host [\\w\\.-]+)', 'no \\1') }}"

    ## Second, build commands to add the standard Syslog configuration
    #- name: Build set of new configuration commands
    #  tags: syslog_dry_run
    #  ansible.builtin.set_fact:
    #    syslog_config_commands:
    #      - "logging host {{ syslog.ipv4 }} port {{ syslog.port }} facility {{ syslog.facility }} severity {{ syslog.severity }} description \"{{ syslog.desc }}\""

    #- name: List all of the Syslog configuration commands that would be pushed
    #  tags: syslog_dry_run
    #  ansible.builtin.debug:
    #    msg: "{{ item }}"
    ##  loop: "{{ [ 'configure terminal' ] + [ 'logging console error' ] + syslog_clear_commands + syslog_config_commands + [ 'logging console warning' ] + [ 'exit' ] }}"
    #  loop: "{{ [ 'configure terminal' ] + [ 'logging console error' ] + syslog_config_commands + [ 'logging console warning' ] + [ 'exit' ] }}"
    #  when: "'debug' in ansible_run_tags"

    #- name: Push the Syslog configuration
    #  ansible.netcommon.cli_command:
    #    command: "{{ item }}"
    ##  loop: "{{ [ 'configure terminal' ] + [ 'logging console error' ] + syslog_clear_commands + syslog_config_commands + [ 'logging console warning' ] + [ 'exit' ] }}"
    #  loop: "{{ [ 'configure terminal' ] + [ 'logging console error' ] + syslog_config_commands + [ 'logging console warning' ] + [ 'exit' ] }}"
    #  register: command_output
    #  changed_when: command_output.stdout|length == 0
    #  failed_when: command_output.stdout|length > 0

    #- name: Show Debug command_output variable
    #  ansible.builtin.debug:
    #    msg: '{{ command_output }}'
    #  when: "'debug' in ansible_run_tags"

    #- name: Check for Failutres in the Command's Output
    #  ansible.builtin.fail:
    #    msg: "The command ({{ item.item }}) did not have an empty response"
    #  when: item.stdout|length > 0
    #  loop: '{{ command_output.results }}'

    #- name: Save Device Configuration
    #  ansible.netcommon.cli_command:
    #    command: "copy running-config startup-config"
    #  register: save_output
    #  failed_when: "'Copy succeeded' not in save_output.stdout"
