---
# tasks file for ntp
- name: Configure the standard NTP settings
  tags:
    - ntp
  block:
    # Build commands to cleanup the old NTP config and add the new standard NTP config
    - name: Build set of new NTP configuration commands
      tags: ntp_dry_run
      ansible.builtin.set_fact:
        ntp_config_commands:
          - "/system clock set time-zone-name={{ ntp.tz.long_name }}"
          - "/system ntp client servers remove [find where address!=\"\"]"
          - "/system ntp client servers add address={{ ntp.ipv4_1 }} comment=\"{{ ntp.desc }}\""
          - "/system ntp client servers add address={{ ntp.ipv4_2 }} comment=\"{{ ntp.desc }}\""

    - name: List all of the NTP configuration commands that would be pushed
      tags: ntp_dry_run
      ansible.builtin.debug:
        msg: "{{ item }}"
      loop: "{{ ntp_config_commands }}"
      when: "'debug' in ansible_run_tags"

    - name: Push the NTP configuration
      ansible.netcommon.cli_command:
        command: "{{ item }}"
      loop: "{{ ntp_config_commands }}"
      register: command_output
      changed_when: command_output.stdout|length <= 0

    - name: Show Debug command_output variable
      ansible.builtin.debug:
        msg: '{{ command_output }}'
      when: "'debug' in ansible_run_tags"

    - name: Check for Failutres in the Command's Output
      ansible.builtin.fail:
        msg: "The command ({{ item.item }}) did not have an empty response"
      when: item.stdout|length > 0
      loop: '{{ command_output.results }}'

    # MikroTik saves automatically
    # - name: Save Device Configuration
    #   ansible.netcommon.cli_command:
    #     command: "copy running-config startup-config"
    #   register: save_output
    #   failed_when: "'Copy succeeded' not in save_output.stdout"
